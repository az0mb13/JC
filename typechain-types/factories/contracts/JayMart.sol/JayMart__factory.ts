/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  JayMart,
  JayMartInterface,
} from "../../../contracts/JayMart.sol/JayMart";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_jayAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "erc721TokenAddress",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "erc721Ids",
        type: "uint256[]",
      },
      {
        internalType: "address[]",
        name: "erc1155TokenAddress",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "erc1155Ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "erc1155Amounts",
        type: "uint256[]",
      },
    ],
    name: "buyJay",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "erc721TokenAddress",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "erc721Ids",
        type: "uint256[]",
      },
      {
        internalType: "address[]",
        name: "erc1155TokenAddress",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "erc1155Ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "erc1155Amounts",
        type: "uint256[]",
      },
    ],
    name: "buyNFTs",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "getFees",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getLatestPrice",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "total",
        type: "uint256",
      },
    ],
    name: "getPriceBuy",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "total",
        type: "uint256",
      },
    ],
    name: "getPriceSell",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotals",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "setTEAMWallet",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "updateFees",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60c0604052662386f26fc10000600655678ac7230489e8000060075566038d7ea4c6800060085562093a804262000037919062000390565b6009553480156200004757600080fd5b50604051620025d9380380620025d983398181016040528101906200006d919062000435565b6200008d620000816200017d60201b60201c565b6200018560201b60201c565b600180819055508073ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff16815250508073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250506200012173985b6b9064212091b4b325f68746b77262801bcb6200024960201b60201c565b735f4ec3df9cbd43714fe2740f5e3616155c5b8419600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050620004ea565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b620002596200029d60201b60201c565b80600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b620002ad6200017d60201b60201c565b73ffffffffffffffffffffffffffffffffffffffff16620002d36200032e60201b60201c565b73ffffffffffffffffffffffffffffffffffffffff16146200032c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200032390620004c8565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006200039d8262000357565b9150620003aa8362000357565b9250828201905080821115620003c557620003c462000361565b5b92915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620003fd82620003d0565b9050919050565b6200040f81620003f0565b81146200041b57600080fd5b50565b6000815190506200042f8162000404565b92915050565b6000602082840312156200044e576200044d620003cb565b5b60006200045e848285016200041e565b91505092915050565b600082825260208201905092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000620004b060208362000467565b9150620004bd8262000478565b602082019050919050565b60006020820190508181036000830152620004e381620004a1565b9050919050565b60805160a0516120b462000525600039600081816104f2015281816106f90152610bcd0152600081816104cb01526106d201526120b46000f3fe6080604052600436106100ec5760003560e01c80638da5cb5b1161008a578063db8d55f111610059578063db8d55f1146102b0578063f23a6e61146102de578063f2fde38b1461031b578063fc9fc6c714610344576100f3565b80638da5cb5b146102135780638e15f4731461023e57806395b6712814610269578063d0e30db0146102a6576100f3565b80634ef26f6a116100c65780634ef26f6a14610198578063666566e8146101b4578063715018a6146101d057806384e10a90146101e7576100f3565b8063150b7a02146100f557806329de6d201461013257806343a43ec81461015b576100f3565b366100f357005b005b34801561010157600080fd5b5061011c600480360381019061011791906114e7565b610372565b60405161012991906115a5565b60405180910390f35b34801561013e57600080fd5b50610159600480360381019061015491906115c0565b610386565b005b34801561016757600080fd5b50610182600480360381019061017d91906115ed565b6103d2565b60405161018f9190611629565b60405180910390f35b6101b260048036038101906101ad91906116fa565b6103e9565b005b6101ce60048036038101906101c991906116fa565b6105a0565b005b3480156101dc57600080fd5b506101e561079c565b005b3480156101f357600080fd5b506101fc6107b0565b60405161020a929190611817565b60405180910390f35b34801561021f57600080fd5b506102286107c1565b604051610235919061184f565b60405180910390f35b34801561024a57600080fd5b506102536107ea565b6040516102609190611883565b60405180910390f35b34801561027557600080fd5b50610290600480360381019061028b91906115ed565b61088b565b60405161029d9190611629565b60405180910390f35b6102ae6108a2565b005b3480156102bc57600080fd5b506102c56108a4565b6040516102d5949392919061189e565b60405180910390f35b3480156102ea57600080fd5b50610305600480360381019061030091906118e3565b6108c4565b60405161031291906115a5565b60405180910390f35b34801561032757600080fd5b50610342600480360381019061033d91906115c0565b6108d9565b005b34801561035057600080fd5b5061035961095c565b604051610369949392919061189e565b60405180910390f35b600063150b7a0260e01b9050949350505050565b61038e610ca8565b80600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000600654826103e291906119a9565b9050919050565b6103f1610d26565b60008a8a905090506104058b8b8b8b610d75565b610413878787878787610e4c565b8161041e91906119eb565b9050806004600082825461043291906119eb565b9250508190555060006006548261044991906119a9565b90508034101561048e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161048590611a7c565b60405180910390fd5b6104c6600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166002346104c19190611acb565b610f74565b6104f07f000000000000000000000000000000000000000000000000000000000000000047610f74565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166379cc6790336007548561053b91906119a9565b6040518363ffffffff1660e01b8152600401610558929190611afc565b600060405180830381600087803b15801561057257600080fd5b505af1158015610586573d6000803e3d6000fd5b505050505050610594611025565b50505050505050505050565b6105a8610d26565b60006004346105b79190611acb565b905060006004346105c89190611acb565b905060006002346105d99190611acb565b905060008d8d905090506105ef8e8e8e8e61102e565b6105fd8a8a8a8a8a8a611105565b8161060891906119eb565b9050806005600082825461061c91906119eb565b9250508190555060006064821015610641576008548261063c91906119a9565b61065c565b60026008548361065191906119a9565b61065b9190611acb565b5b9050803410156106a1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161069890611a7c565b60405180910390fd5b6106cd600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1686610f74565b6106f77f000000000000000000000000000000000000000000000000000000000000000085610f74565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663f088d54784336040518363ffffffff1660e01b8152600401610751919061184f565b6000604051808303818588803b15801561076a57600080fd5b505af115801561077e573d6000803e3d6000fd5b50505050505050505050610790611025565b50505050505050505050565b6107a4610ca8565b6107ae600061122d565b565b600080600454600554915091509091565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600080600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa15801561085a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061087e9190611ba8565b5050509150508091505090565b60006008548261089b91906119a9565b9050919050565b565b600080600080600854600654600754600954935093509350935090919293565b600063f23a6e6160e01b905095945050505050565b6108e1610ca8565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610950576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161094790611c95565b60405180910390fd5b6109598161122d565b50565b60008060008061096a610d26565b600080600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa1580156109da573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109fe9190611ba8565b5093505092505060006402540be40083610a1891906119a9565b90506009548211610a5e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a5590611d01565b60405180910390fd5b6000671bc16d674ec80000821115610aa4576000671bc16d674ec8000083610a869190611acb565b905080670de0b6b3a7640000610a9c9190611acb565b915050610abb565b81671bc16d674ec80000610ab89190611acb565b90505b3373ffffffffffffffffffffffffffffffffffffffff16610ada6107c1565b73ffffffffffffffffffffffffffffffffffffffff161480610b225750806002600854610b079190611acb565b108015610b215750806096600854610b1f91906119a9565b115b5b610b61576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b5890611d6d565b60405180910390fd5b80600881905550678ac7230489e80000821115610bb0576000678ac7230489e8000083610b8e9190611acb565b905080670de0b6b3a7640000610ba49190611acb565b60068190555050610bcb565b81678ac7230489e80000610bc49190611acb565b6006819055505b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663f57557476006546040518263ffffffff1660e01b8152600401610c269190611629565b602060405180830381865afa158015610c43573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c679190611d8d565b6007819055506201518083610c7c91906119eb565b600981905550600854600654600754600954975097509750975050505050610ca2611025565b90919293565b610cb06112f1565b73ffffffffffffffffffffffffffffffffffffffff16610cce6107c1565b73ffffffffffffffffffffffffffffffffffffffff1614610d24576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d1b90611e06565b60405180910390fd5b565b600260015403610d6b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d6290611e72565b60405180910390fd5b6002600181905550565b60005b82829050811015610e4557848482818110610d9657610d95611e92565b5b9050602002016020810190610dab91906115c0565b73ffffffffffffffffffffffffffffffffffffffff166342842e0e3033868686818110610ddb57610dda611e92565b5b905060200201356040518463ffffffff1660e01b8152600401610e0093929190611ec1565b600060405180830381600087803b158015610e1a57600080fd5b505af1158015610e2e573d6000803e3d6000fd5b505050508080610e3d90611ef8565b915050610d78565b5050505050565b6000806000905060005b86869050811015610f6557848482818110610e7457610e73611e92565b5b9050602002013582610e8691906119a9565b9150888882818110610e9b57610e9a611e92565b5b9050602002016020810190610eb091906115c0565b73ffffffffffffffffffffffffffffffffffffffff1663f242432a30338a8a86818110610ee057610edf611e92565b5b90506020020135898987818110610efa57610ef9611e92565b5b905060200201356040518563ffffffff1660e01b8152600401610f209493929190611f77565b600060405180830381600087803b158015610f3a57600080fd5b505af1158015610f4e573d6000803e3d6000fd5b505050508080610f5d90611ef8565b915050610e56565b50809150509695505050505050565b60008273ffffffffffffffffffffffffffffffffffffffff1682604051610f9a90611ffd565b60006040518083038185875af1925050503d8060008114610fd7576040519150601f19603f3d011682016040523d82523d6000602084013e610fdc565b606091505b5050905080611020576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110179061205e565b60405180910390fd5b505050565b60018081905550565b60005b828290508110156110fe5784848281811061104f5761104e611e92565b5b905060200201602081019061106491906115c0565b73ffffffffffffffffffffffffffffffffffffffff166342842e0e333086868681811061109457611093611e92565b5b905060200201356040518463ffffffff1660e01b81526004016110b993929190611ec1565b600060405180830381600087803b1580156110d357600080fd5b505af11580156110e7573d6000803e3d6000fd5b5050505080806110f690611ef8565b915050611031565b5050505050565b6000806000905060005b8686905081101561121e5784848281811061112d5761112c611e92565b5b905060200201358261113f91906119eb565b915088888281811061115457611153611e92565b5b905060200201602081019061116991906115c0565b73ffffffffffffffffffffffffffffffffffffffff1663f242432a33308a8a8681811061119957611198611e92565b5b905060200201358989878181106111b3576111b2611e92565b5b905060200201356040518563ffffffff1660e01b81526004016111d99493929190611f77565b600060405180830381600087803b1580156111f357600080fd5b505af1158015611207573d6000803e3d6000fd5b50505050808061121690611ef8565b91505061110f565b50809150509695505050505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006113388261130d565b9050919050565b6113488161132d565b811461135357600080fd5b50565b6000813590506113658161133f565b92915050565b6000819050919050565b61137e8161136b565b811461138957600080fd5b50565b60008135905061139b81611375565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6113f4826113ab565b810181811067ffffffffffffffff82111715611413576114126113bc565b5b80604052505050565b60006114266112f9565b905061143282826113eb565b919050565b600067ffffffffffffffff821115611452576114516113bc565b5b61145b826113ab565b9050602081019050919050565b82818337600083830152505050565b600061148a61148584611437565b61141c565b9050828152602081018484840111156114a6576114a56113a6565b5b6114b1848285611468565b509392505050565b600082601f8301126114ce576114cd6113a1565b5b81356114de848260208601611477565b91505092915050565b6000806000806080858703121561150157611500611303565b5b600061150f87828801611356565b945050602061152087828801611356565b93505060406115318782880161138c565b925050606085013567ffffffffffffffff81111561155257611551611308565b5b61155e878288016114b9565b91505092959194509250565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61159f8161156a565b82525050565b60006020820190506115ba6000830184611596565b92915050565b6000602082840312156115d6576115d5611303565b5b60006115e484828501611356565b91505092915050565b60006020828403121561160357611602611303565b5b60006116118482850161138c565b91505092915050565b6116238161136b565b82525050565b600060208201905061163e600083018461161a565b92915050565b600080fd5b600080fd5b60008083601f840112611664576116636113a1565b5b8235905067ffffffffffffffff81111561168157611680611644565b5b60208301915083602082028301111561169d5761169c611649565b5b9250929050565b60008083601f8401126116ba576116b96113a1565b5b8235905067ffffffffffffffff8111156116d7576116d6611644565b5b6020830191508360208202830111156116f3576116f2611649565b5b9250929050565b60008060008060008060008060008060a08b8d03121561171d5761171c611303565b5b60008b013567ffffffffffffffff81111561173b5761173a611308565b5b6117478d828e0161164e565b9a509a505060208b013567ffffffffffffffff81111561176a57611769611308565b5b6117768d828e016116a4565b985098505060408b013567ffffffffffffffff81111561179957611798611308565b5b6117a58d828e0161164e565b965096505060608b013567ffffffffffffffff8111156117c8576117c7611308565b5b6117d48d828e016116a4565b945094505060808b013567ffffffffffffffff8111156117f7576117f6611308565b5b6118038d828e016116a4565b92509250509295989b9194979a5092959850565b600060408201905061182c600083018561161a565b611839602083018461161a565b9392505050565b6118498161132d565b82525050565b60006020820190506118646000830184611840565b92915050565b6000819050919050565b61187d8161186a565b82525050565b60006020820190506118986000830184611874565b92915050565b60006080820190506118b3600083018761161a565b6118c0602083018661161a565b6118cd604083018561161a565b6118da606083018461161a565b95945050505050565b600080600080600060a086880312156118ff576118fe611303565b5b600061190d88828901611356565b955050602061191e88828901611356565b945050604061192f8882890161138c565b93505060606119408882890161138c565b925050608086013567ffffffffffffffff81111561196157611960611308565b5b61196d888289016114b9565b9150509295509295909350565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006119b48261136b565b91506119bf8361136b565b92508282026119cd8161136b565b915082820484148315176119e4576119e361197a565b5b5092915050565b60006119f68261136b565b9150611a018361136b565b9250828201905080821115611a1957611a1861197a565b5b92915050565b600082825260208201905092915050565b7f596f75206e65656420746f20706179206d6f7265204554482e00000000000000600082015250565b6000611a66601983611a1f565b9150611a7182611a30565b602082019050919050565b60006020820190508181036000830152611a9581611a59565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000611ad68261136b565b9150611ae18361136b565b925082611af157611af0611a9c565b5b828204905092915050565b6000604082019050611b116000830185611840565b611b1e602083018461161a565b9392505050565b600069ffffffffffffffffffff82169050919050565b611b4481611b25565b8114611b4f57600080fd5b50565b600081519050611b6181611b3b565b92915050565b611b708161186a565b8114611b7b57600080fd5b50565b600081519050611b8d81611b67565b92915050565b600081519050611ba281611375565b92915050565b600080600080600060a08688031215611bc457611bc3611303565b5b6000611bd288828901611b52565b9550506020611be388828901611b7e565b9450506040611bf488828901611b93565b9350506060611c0588828901611b93565b9250506080611c1688828901611b52565b9150509295509295909350565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000611c7f602683611a1f565b9150611c8a82611c23565b604082019050919050565b60006020820190508181036000830152611cae81611c72565b9050919050565b7f4665652075706461746520657665727920323420687273000000000000000000600082015250565b6000611ceb601783611a1f565b9150611cf682611cb5565b602082019050919050565b60006020820190508181036000830152611d1a81611cde565b9050919050565b7f466565207377696e6720746f6f20686967680000000000000000000000000000600082015250565b6000611d57601283611a1f565b9150611d6282611d21565b602082019050919050565b60006020820190508181036000830152611d8681611d4a565b9050919050565b600060208284031215611da357611da2611303565b5b6000611db184828501611b93565b91505092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000611df0602083611a1f565b9150611dfb82611dba565b602082019050919050565b60006020820190508181036000830152611e1f81611de3565b9050919050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b6000611e5c601f83611a1f565b9150611e6782611e26565b602082019050919050565b60006020820190508181036000830152611e8b81611e4f565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000606082019050611ed66000830186611840565b611ee36020830185611840565b611ef0604083018461161a565b949350505050565b6000611f038261136b565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611f3557611f3461197a565b5b600182019050919050565b600082825260208201905092915050565b50565b6000611f61600083611f40565b9150611f6c82611f51565b600082019050919050565b600060a082019050611f8c6000830187611840565b611f996020830186611840565b611fa6604083018561161a565b611fb3606083018461161a565b8181036080830152611fc481611f54565b905095945050505050565b600081905092915050565b6000611fe7600083611fcf565b9150611ff282611f51565b600082019050919050565b600061200882611fda565b9150819050919050565b7f455448205472616e73666572206661696c65642e000000000000000000000000600082015250565b6000612048601483611a1f565b915061205382612012565b602082019050919050565b600060208201905081810360008301526120778161203b565b905091905056fea2646970667358221220181fc280eff4c3415590766e379b93f0bb6ef12b92339de129e0dafb39ee9e2a64736f6c63430008110033";

type JayMartConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: JayMartConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class JayMart__factory extends ContractFactory {
  constructor(...args: JayMartConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _jayAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<JayMart> {
    return super.deploy(_jayAddress, overrides || {}) as Promise<JayMart>;
  }
  override getDeployTransaction(
    _jayAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_jayAddress, overrides || {});
  }
  override attach(address: string): JayMart {
    return super.attach(address) as JayMart;
  }
  override connect(signer: Signer): JayMart__factory {
    return super.connect(signer) as JayMart__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): JayMartInterface {
    return new utils.Interface(_abi) as JayMartInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): JayMart {
    return new Contract(address, _abi, signerOrProvider) as JayMart;
  }
}
