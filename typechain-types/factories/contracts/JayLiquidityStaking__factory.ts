/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  JayLiquidityStaking,
  JayLiquidityStakingInterface,
} from "../../contracts/JayLiquidityStaking";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_liquidityToken",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "harvestedAmount",
        type: "uint256",
      },
    ],
    name: "Harvest",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdraw",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getBal",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "getReward",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRewardPerTokenStored",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "getStaked",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalStaked",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "init",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_initialLPs",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "_addresses",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "_balances",
        type: "uint256[]",
      },
    ],
    name: "initalize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "liquidityToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "previusRewardTotal",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardPerTokenStored",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "setFeeAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "totalAmountStaked",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "userInfo",
    outputs: [
      {
        internalType: "uint256",
        name: "shares",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "rewardPerTokenOnEntry",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60a06040526000600760006101000a81548160ff0219169083151502179055503480156200002c57600080fd5b50604051620025c7380380620025c78339818101604052810190620000529190620001ed565b60016000819055506200007a6200006e620000b560201b60201c565b620000bd60201b60201c565b8073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1681525050506200021f565b600033905090565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620001b58262000188565b9050919050565b620001c781620001a8565b8114620001d357600080fd5b50565b600081519050620001e781620001bc565b92915050565b60006020828403121562000206576200020562000183565b5b60006200021684828501620001d6565b91505092915050565b608051612377620002506000396000818161050301528181610602015281816107cb0152610a6601526123776000f3fe60806040526004361061010d5760003560e01c80638d86934211610095578063df136d6511610064578063df136d6514610363578063e1c7392a1461038e578063e34d5d27146103b9578063f2fde38b146103e4578063fe961f611461040d57610114565b80638d869342146102a75780638da5cb5b146102d2578063b6b55f25146102fd578063c00007b01461032657610114565b8063399080ec116100dc578063399080ec146101d657806343cd8f7e1461021357806354cde9f81461023e578063715018a6146102675780638705fcd41461027e57610114565b80630917e776146101195780631959a0021461014457806325caa262146101825780632e1a7d4d146101ad57610114565b3661011457005b600080fd5b34801561012557600080fd5b5061012e610438565b60405161013b91906116a3565b60405180910390f35b34801561015057600080fd5b5061016b60048036038101906101669190611730565b610442565b60405161017992919061175d565b60405180910390f35b34801561018e57600080fd5b50610197610466565b6040516101a491906116a3565b60405180910390f35b3480156101b957600080fd5b506101d460048036038101906101cf91906117b2565b61046e565b005b3480156101e257600080fd5b506101fd60048036038101906101f89190611730565b6105b4565b60405161020a91906116a3565b60405180910390f35b34801561021f57600080fd5b50610228610600565b604051610235919061183e565b60405180910390f35b34801561024a57600080fd5b5061026560048036038101906102609190611a75565b610624565b005b34801561027357600080fd5b5061027c610870565b005b34801561028a57600080fd5b506102a560048036038101906102a09190611730565b610884565b005b3480156102b357600080fd5b506102bc6108d0565b6040516102c991906116a3565b60405180910390f35b3480156102de57600080fd5b506102e7610986565b6040516102f49190611b0f565b60405180910390f35b34801561030957600080fd5b50610324600480360381019061031f91906117b2565b6109b0565b005b34801561033257600080fd5b5061034d60048036038101906103489190611730565b610b18565b60405161035a91906116a3565b60405180910390f35b34801561036f57600080fd5b50610378610c98565b60405161038591906116a3565b60405180910390f35b34801561039a57600080fd5b506103a3610c9e565b6040516103b09190611b45565b60405180910390f35b3480156103c557600080fd5b506103ce610cb1565b6040516103db91906116a3565b60405180910390f35b3480156103f057600080fd5b5061040b60048036038101906104069190611730565b610cb7565b005b34801561041957600080fd5b50610422610d3a565b60405161042f91906116a3565b60405180910390f35b6000600454905090565b60066020528060005260406000206000915090508060000154908060010154905082565b600047905090565b610476610d40565b6000610480610d8f565b905081600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160008282546104d49190611b8f565b925050819055506104e3610fa6565b81600460008282546104f59190611b8f565b9250508190555061054733837f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166110899092919063ffffffff16565b600081111561055a576105598161110f565b5b3373ffffffffffffffffffffffffffffffffffffffff167f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a9424364836040516105a091906116a3565b60405180910390a2506105b16111bf565b50565b6000600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001549050919050565b7f000000000000000000000000000000000000000000000000000000000000000081565b61062c6111c9565b600760009054906101000a900460ff161561067c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067390611c20565b60405180910390fd5b6001600760006101000a81548160ff0219169083151502179055506000805b835181101561077f5760405180604001604052808483815181106106c2576106c1611c40565b5b602002602001015181526020016000815250600660008684815181106106eb576106ea611c40565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082015181600001556020820151816001015590505082818151811061075757610756611c40565b5b60200260200101518261076a9190611c6f565b9150808061077790611ca3565b91505061069b565b508381146107c2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107b990611d37565b60405180910390fd5b806004819055507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166323b872dd3330876040518463ffffffff1660e01b815260040161082693929190611d57565b6020604051808303816000875af1158015610845573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108699190611dba565b5050505050565b6108786111c9565b6108826000611247565b565b61088c6111c9565b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600080600454111561097e5761096a60045461095c670de0b6b3a764000061094e600554610940600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16314761130d90919063ffffffff16565b61132390919063ffffffff16565b61133990919063ffffffff16565b61134f90919063ffffffff16565b6003546109779190611c6f565b9050610983565b600090505b90565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6109b8610d40565b60008060045411156109d3576109cc610d8f565b90506109e4565b600060038190555060006005819055505b81600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000016000828254610a369190611c6f565b92505081905550610a45610fa6565b8160046000828254610a579190611c6f565b92505081905550610aab3330847f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16611365909392919063ffffffff16565b6000811115610abe57610abd8161110f565b5b3373ffffffffffffffffffffffffffffffffffffffff167fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c83604051610b0491906116a3565b60405180910390a250610b156111bf565b50565b6000806004541115610c8e576000610bb4600454610ba6670de0b6b3a7640000610b98600554610b8a600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16314761130d90919063ffffffff16565b61132390919063ffffffff16565b61133990919063ffffffff16565b61134f90919063ffffffff16565b600354610bc19190611c6f565b9050610c86670de0b6b3a7640000610c78610c27600660008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101548561132390919063ffffffff16565b600660008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000015461133990919063ffffffff16565b61134f90919063ffffffff16565b915050610c93565b600090505b919050565b60035481565b600760009054906101000a900460ff1681565b60055481565b610cbf6111c9565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610d2e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d2590611e59565b60405180910390fd5b610d3781611247565b50565b60045481565b600260005403610d85576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d7c90611ec5565b60405180910390fd5b6002600081905550565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f61510896040518163ffffffff1660e01b8152600401600060405180830381600087803b158015610dfb57600080fd5b505af1158015610e0f573d6000803e3d6000fd5b505050506000479050610e5b600454610e4d670de0b6b3a7640000610e3f6005548661132390919063ffffffff16565b61133990919063ffffffff16565b61134f90919063ffffffff16565b600354610e689190611c6f565b6003819055506000610f35670de0b6b3a7640000610f27610ed6600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001015460035461132390919063ffffffff16565b600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000015461133990919063ffffffff16565b61134f90919063ffffffff16565b9050610f4a818361132390919063ffffffff16565b6005819055503373ffffffffffffffffffffffffffffffffffffffff167fc9695243a805adb74c91f28311176c65b417e842d5699893cef56d18bfa48cba82604051610f9691906116a3565b60405180910390a2809250505090565b6000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001540361103d576000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010181905550611087565b600354600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101819055505b565b61110a8363a9059cbb60e01b84846040516024016110a8929190611ee5565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506113ee565b505050565b60003373ffffffffffffffffffffffffffffffffffffffff168260405161113590611f3f565b60006040518083038185875af1925050503d8060008114611172576040519150601f19603f3d011682016040523d82523d6000602084013e611177565b606091505b50509050806111bb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111b290611fa0565b60405180910390fd5b5050565b6001600081905550565b6111d16114b5565b73ffffffffffffffffffffffffffffffffffffffff166111ef610986565b73ffffffffffffffffffffffffffffffffffffffff1614611245576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161123c9061200c565b60405180910390fd5b565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000818361131b9190611c6f565b905092915050565b600081836113319190611b8f565b905092915050565b60008183611347919061202c565b905092915050565b6000818361135d919061209d565b905092915050565b6113e8846323b872dd60e01b85858560405160240161138693929190611d57565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506113ee565b50505050565b6000611450826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166114bd9092919063ffffffff16565b90506000815111156114b057808060200190518101906114709190611dba565b6114af576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114a690612140565b60405180910390fd5b5b505050565b600033905090565b60606114cc84846000856114d5565b90509392505050565b60608247101561151a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611511906121d2565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff1685876040516115439190612258565b60006040518083038185875af1925050503d8060008114611580576040519150601f19603f3d011682016040523d82523d6000602084013e611585565b606091505b5091509150611596878383876115a2565b92505050949350505050565b606083156116045760008351036115fc576115bc85611617565b6115fb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115f2906122bb565b60405180910390fd5b5b82905061160f565b61160e838361163a565b5b949350505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b60008251111561164d5781518083602001fd5b806040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611681919061231f565b60405180910390fd5b6000819050919050565b61169d8161168a565b82525050565b60006020820190506116b86000830184611694565b92915050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006116fd826116d2565b9050919050565b61170d816116f2565b811461171857600080fd5b50565b60008135905061172a81611704565b92915050565b600060208284031215611746576117456116c8565b5b60006117548482850161171b565b91505092915050565b60006040820190506117726000830185611694565b61177f6020830184611694565b9392505050565b61178f8161168a565b811461179a57600080fd5b50565b6000813590506117ac81611786565b92915050565b6000602082840312156117c8576117c76116c8565b5b60006117d68482850161179d565b91505092915050565b6000819050919050565b60006118046117ff6117fa846116d2565b6117df565b6116d2565b9050919050565b6000611816826117e9565b9050919050565b60006118288261180b565b9050919050565b6118388161181d565b82525050565b6000602082019050611853600083018461182f565b92915050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6118a78261185e565b810181811067ffffffffffffffff821117156118c6576118c561186f565b5b80604052505050565b60006118d96116be565b90506118e5828261189e565b919050565b600067ffffffffffffffff8211156119055761190461186f565b5b602082029050602081019050919050565b600080fd5b600061192e611929846118ea565b6118cf565b9050808382526020820190506020840283018581111561195157611950611916565b5b835b8181101561197a5780611966888261171b565b845260208401935050602081019050611953565b5050509392505050565b600082601f83011261199957611998611859565b5b81356119a984826020860161191b565b91505092915050565b600067ffffffffffffffff8211156119cd576119cc61186f565b5b602082029050602081019050919050565b60006119f16119ec846119b2565b6118cf565b90508083825260208201905060208402830185811115611a1457611a13611916565b5b835b81811015611a3d5780611a29888261179d565b845260208401935050602081019050611a16565b5050509392505050565b600082601f830112611a5c57611a5b611859565b5b8135611a6c8482602086016119de565b91505092915050565b600080600060608486031215611a8e57611a8d6116c8565b5b6000611a9c8682870161179d565b935050602084013567ffffffffffffffff811115611abd57611abc6116cd565b5b611ac986828701611984565b925050604084013567ffffffffffffffff811115611aea57611ae96116cd565b5b611af686828701611a47565b9150509250925092565b611b09816116f2565b82525050565b6000602082019050611b246000830184611b00565b92915050565b60008115159050919050565b611b3f81611b2a565b82525050565b6000602082019050611b5a6000830184611b36565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611b9a8261168a565b9150611ba58361168a565b9250828203905081811115611bbd57611bbc611b60565b5b92915050565b600082825260208201905092915050565b7f436f6e747261637420616c726561647920696e697469616c697a656400000000600082015250565b6000611c0a601c83611bc3565b9150611c1582611bd4565b602082019050919050565b60006020820190508181036000830152611c3981611bfd565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000611c7a8261168a565b9150611c858361168a565b9250828201905080821115611c9d57611c9c611b60565b5b92915050565b6000611cae8261168a565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611ce057611cdf611b60565b5b600182019050919050565b7f546f74616c7320646f6e74206d61746368000000000000000000000000000000600082015250565b6000611d21601183611bc3565b9150611d2c82611ceb565b602082019050919050565b60006020820190508181036000830152611d5081611d14565b9050919050565b6000606082019050611d6c6000830186611b00565b611d796020830185611b00565b611d866040830184611694565b949350505050565b611d9781611b2a565b8114611da257600080fd5b50565b600081519050611db481611d8e565b92915050565b600060208284031215611dd057611dcf6116c8565b5b6000611dde84828501611da5565b91505092915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000611e43602683611bc3565b9150611e4e82611de7565b604082019050919050565b60006020820190508181036000830152611e7281611e36565b9050919050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b6000611eaf601f83611bc3565b9150611eba82611e79565b602082019050919050565b60006020820190508181036000830152611ede81611ea2565b9050919050565b6000604082019050611efa6000830185611b00565b611f076020830184611694565b9392505050565b600081905092915050565b50565b6000611f29600083611f0e565b9150611f3482611f19565b600082019050919050565b6000611f4a82611f1c565b9150819050919050565b7f455448205472616e73666572206661696c65642e000000000000000000000000600082015250565b6000611f8a601483611bc3565b9150611f9582611f54565b602082019050919050565b60006020820190508181036000830152611fb981611f7d565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000611ff6602083611bc3565b915061200182611fc0565b602082019050919050565b6000602082019050818103600083015261202581611fe9565b9050919050565b60006120378261168a565b91506120428361168a565b92508282026120508161168a565b9150828204841483151761206757612066611b60565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006120a88261168a565b91506120b38361168a565b9250826120c3576120c261206e565b5b828204905092915050565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b600061212a602a83611bc3565b9150612135826120ce565b604082019050919050565b600060208201905081810360008301526121598161211d565b9050919050565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b60006121bc602683611bc3565b91506121c782612160565b604082019050919050565b600060208201905081810360008301526121eb816121af565b9050919050565b600081519050919050565b60005b8381101561221b578082015181840152602081019050612200565b60008484015250505050565b6000612232826121f2565b61223c8185611f0e565b935061224c8185602086016121fd565b80840191505092915050565b60006122648284612227565b915081905092915050565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b60006122a5601d83611bc3565b91506122b08261226f565b602082019050919050565b600060208201905081810360008301526122d481612298565b9050919050565b600081519050919050565b60006122f1826122db565b6122fb8185611bc3565b935061230b8185602086016121fd565b6123148161185e565b840191505092915050565b6000602082019050818103600083015261233981846122e6565b90509291505056fea26469706673582212205d97c36f7ac83e6942525590db1977069e8ff136a3e7e26205b5025cba33afb564736f6c63430008110033";

type JayLiquidityStakingConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: JayLiquidityStakingConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class JayLiquidityStaking__factory extends ContractFactory {
  constructor(...args: JayLiquidityStakingConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _liquidityToken: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<JayLiquidityStaking> {
    return super.deploy(
      _liquidityToken,
      overrides || {}
    ) as Promise<JayLiquidityStaking>;
  }
  override getDeployTransaction(
    _liquidityToken: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_liquidityToken, overrides || {});
  }
  override attach(address: string): JayLiquidityStaking {
    return super.attach(address) as JayLiquidityStaking;
  }
  override connect(signer: Signer): JayLiquidityStaking__factory {
    return super.connect(signer) as JayLiquidityStaking__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): JayLiquidityStakingInterface {
    return new utils.Interface(_abi) as JayLiquidityStakingInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): JayLiquidityStaking {
    return new Contract(address, _abi, signerOrProvider) as JayLiquidityStaking;
  }
}
