/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  JayLiquidityStaking,
  JayLiquidityStakingInterface,
} from "../../contracts/JayLiquidityStaking";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_liquidityToken",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "harvestedAmount",
        type: "uint256",
      },
    ],
    name: "Harvest",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdraw",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getBal",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "getReward",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRewardPerTokenStored",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "getStaked",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalStaked",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "init",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_initialLPs",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "_addresses",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "_balances",
        type: "uint256[]",
      },
    ],
    name: "initalize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "liquidityToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "previusRewardTotal",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardPerTokenStored",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "setFeeAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "totalAmountStaked",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "userInfo",
    outputs: [
      {
        internalType: "uint256",
        name: "shares",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "rewardPerTokenOnEntry",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60a06040526000600760006101000a81548160ff0219169083151502179055503480156200002c57600080fd5b506040516200255d3803806200255d8339818101604052810190620000529190620001ed565b60016000819055506200007a6200006e620000b560201b60201c565b620000bd60201b60201c565b8073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1681525050506200021f565b600033905090565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620001b58262000188565b9050919050565b620001c781620001a8565b8114620001d357600080fd5b50565b600081519050620001e781620001bc565b92915050565b60006020828403121562000206576200020562000183565b5b60006200021684828501620001d6565b91505092915050565b60805161230d6200025060003960008181610545015281816106440152818161080d0152610a5d015261230d6000f3fe60806040526004361061010d5760003560e01c80638d86934211610095578063df136d6511610064578063df136d6514610363578063e1c7392a1461038e578063e34d5d27146103b9578063f2fde38b146103e4578063fe961f611461040d57610114565b80638d869342146102a75780638da5cb5b146102d2578063b6b55f25146102fd578063c00007b01461032657610114565b8063399080ec116100dc578063399080ec146101d657806343cd8f7e1461021357806354cde9f81461023e578063715018a6146102675780638705fcd41461027e57610114565b80630917e776146101195780631959a0021461014457806325caa262146101825780632e1a7d4d146101ad57610114565b3661011457005b600080fd5b34801561012557600080fd5b5061012e610438565b60405161013b9190611639565b60405180910390f35b34801561015057600080fd5b5061016b600480360381019061016691906116c6565b610442565b6040516101799291906116f3565b60405180910390f35b34801561018e57600080fd5b50610197610466565b6040516101a49190611639565b60405180910390f35b3480156101b957600080fd5b506101d460048036038101906101cf9190611748565b61046e565b005b3480156101e257600080fd5b506101fd60048036038101906101f891906116c6565b6105f6565b60405161020a9190611639565b60405180910390f35b34801561021f57600080fd5b50610228610642565b60405161023591906117d4565b60405180910390f35b34801561024a57600080fd5b5061026560048036038101906102609190611a0b565b610666565b005b34801561027357600080fd5b5061027c6108b2565b005b34801561028a57600080fd5b506102a560048036038101906102a091906116c6565b6108c6565b005b3480156102b357600080fd5b506102bc610912565b6040516102c99190611639565b60405180910390f35b3480156102de57600080fd5b506102e761097d565b6040516102f49190611aa5565b60405180910390f35b34801561030957600080fd5b50610324600480360381019061031f9190611748565b6109a7565b005b34801561033257600080fd5b5061034d600480360381019061034891906116c6565b610b0f565b60405161035a9190611639565b60405180910390f35b34801561036f57600080fd5b50610378610c44565b6040516103859190611639565b60405180910390f35b34801561039a57600080fd5b506103a3610c4a565b6040516103b09190611adb565b60405180910390f35b3480156103c557600080fd5b506103ce610c5d565b6040516103db9190611639565b60405180910390f35b3480156103f057600080fd5b5061040b600480360381019061040691906116c6565b610c63565b005b34801561041957600080fd5b50610422610ce6565b60405161042f9190611639565b60405180910390f35b6000600454905090565b60066020528060005260406000206000915090508060000154908060010154905082565b600047905090565b610476610cec565b6000610480610d3b565b905081600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160008282546104d49190611b25565b925050819055506104e3610f52565b81600460008282546104f59190611b25565b9250508190555061058933600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001547f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166110359092919063ffffffff16565b600081111561059c5761059b816110bb565b5b3373ffffffffffffffffffffffffffffffffffffffff167f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a9424364836040516105e29190611639565b60405180910390a2506105f361116b565b50565b6000600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001549050919050565b7f000000000000000000000000000000000000000000000000000000000000000081565b61066e611175565b600760009054906101000a900460ff16156106be576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106b590611bb6565b60405180910390fd5b6001600760006101000a81548160ff0219169083151502179055506000805b83518110156107c157604051806040016040528084838151811061070457610703611bd6565b5b6020026020010151815260200160008152506006600086848151811061072d5761072c611bd6565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082015181600001556020820151816001015590505082818151811061079957610798611bd6565b5b6020026020010151826107ac9190611c05565b915080806107b990611c39565b9150506106dd565b50838114610804576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107fb90611ccd565b60405180910390fd5b806004819055507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166323b872dd3330876040518463ffffffff1660e01b815260040161086893929190611ced565b6020604051808303816000875af1158015610887573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108ab9190611d50565b5050505050565b6108ba611175565b6108c460006111f3565b565b6108ce611175565b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600080600454111561097557610961600454610953670de0b6b3a7640000610945600554476112b990919063ffffffff16565b6112cf90919063ffffffff16565b6112e590919063ffffffff16565b60035461096e9190611c05565b905061097a565b600090505b90565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6109af610cec565b60008060045411156109ca576109c3610d3b565b90506109db565b600060038190555060006005819055505b81600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000016000828254610a2d9190611c05565b92505081905550610a3c610f52565b8160046000828254610a4e9190611c05565b92505081905550610aa23330847f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166112fb909392919063ffffffff16565b6000811115610ab557610ab4816110bb565b5b3373ffffffffffffffffffffffffffffffffffffffff167fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c83604051610afb9190611639565b60405180910390a250610b0c61116b565b50565b6000806004541115610c3a576000610b60600454610b52670de0b6b3a7640000610b44600554476112b990919063ffffffff16565b6112cf90919063ffffffff16565b6112e590919063ffffffff16565b600354610b6d9190611c05565b9050610c32670de0b6b3a7640000610c24610bd3600660008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154856112b990919063ffffffff16565b600660008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001546112cf90919063ffffffff16565b6112e590919063ffffffff16565b915050610c3f565b600090505b919050565b60035481565b600760009054906101000a900460ff1681565b60055481565b610c6b611175565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610cda576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cd190611def565b60405180910390fd5b610ce3816111f3565b50565b60045481565b600260005403610d31576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d2890611e5b565b60405180910390fd5b6002600081905550565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f61510896040518163ffffffff1660e01b8152600401600060405180830381600087803b158015610da757600080fd5b505af1158015610dbb573d6000803e3d6000fd5b505050506000479050610e07600454610df9670de0b6b3a7640000610deb600554866112b990919063ffffffff16565b6112cf90919063ffffffff16565b6112e590919063ffffffff16565b600354610e149190611c05565b6003819055506000610ee1670de0b6b3a7640000610ed3610e82600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101546003546112b990919063ffffffff16565b600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001546112cf90919063ffffffff16565b6112e590919063ffffffff16565b9050610ef681836112b990919063ffffffff16565b6005819055503373ffffffffffffffffffffffffffffffffffffffff167fc9695243a805adb74c91f28311176c65b417e842d5699893cef56d18bfa48cba82604051610f429190611639565b60405180910390a2809250505090565b6000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000015403610fe9576000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010181905550611033565b600354600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101819055505b565b6110b68363a9059cbb60e01b8484604051602401611054929190611e7b565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611384565b505050565b60003373ffffffffffffffffffffffffffffffffffffffff16826040516110e190611ed5565b60006040518083038185875af1925050503d806000811461111e576040519150601f19603f3d011682016040523d82523d6000602084013e611123565b606091505b5050905080611167576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161115e90611f36565b60405180910390fd5b5050565b6001600081905550565b61117d61144b565b73ffffffffffffffffffffffffffffffffffffffff1661119b61097d565b73ffffffffffffffffffffffffffffffffffffffff16146111f1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111e890611fa2565b60405180910390fd5b565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600081836112c79190611b25565b905092915050565b600081836112dd9190611fc2565b905092915050565b600081836112f39190612033565b905092915050565b61137e846323b872dd60e01b85858560405160240161131c93929190611ced565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611384565b50505050565b60006113e6826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166114539092919063ffffffff16565b905060008151111561144657808060200190518101906114069190611d50565b611445576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161143c906120d6565b60405180910390fd5b5b505050565b600033905090565b6060611462848460008561146b565b90509392505050565b6060824710156114b0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114a790612168565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff1685876040516114d991906121ee565b60006040518083038185875af1925050503d8060008114611516576040519150601f19603f3d011682016040523d82523d6000602084013e61151b565b606091505b509150915061152c87838387611538565b92505050949350505050565b6060831561159a57600083510361159257611552856115ad565b611591576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161158890612251565b60405180910390fd5b5b8290506115a5565b6115a483836115d0565b5b949350505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b6000825111156115e35781518083602001fd5b806040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161161791906122b5565b60405180910390fd5b6000819050919050565b61163381611620565b82525050565b600060208201905061164e600083018461162a565b92915050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061169382611668565b9050919050565b6116a381611688565b81146116ae57600080fd5b50565b6000813590506116c08161169a565b92915050565b6000602082840312156116dc576116db61165e565b5b60006116ea848285016116b1565b91505092915050565b6000604082019050611708600083018561162a565b611715602083018461162a565b9392505050565b61172581611620565b811461173057600080fd5b50565b6000813590506117428161171c565b92915050565b60006020828403121561175e5761175d61165e565b5b600061176c84828501611733565b91505092915050565b6000819050919050565b600061179a61179561179084611668565b611775565b611668565b9050919050565b60006117ac8261177f565b9050919050565b60006117be826117a1565b9050919050565b6117ce816117b3565b82525050565b60006020820190506117e960008301846117c5565b92915050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61183d826117f4565b810181811067ffffffffffffffff8211171561185c5761185b611805565b5b80604052505050565b600061186f611654565b905061187b8282611834565b919050565b600067ffffffffffffffff82111561189b5761189a611805565b5b602082029050602081019050919050565b600080fd5b60006118c46118bf84611880565b611865565b905080838252602082019050602084028301858111156118e7576118e66118ac565b5b835b8181101561191057806118fc88826116b1565b8452602084019350506020810190506118e9565b5050509392505050565b600082601f83011261192f5761192e6117ef565b5b813561193f8482602086016118b1565b91505092915050565b600067ffffffffffffffff82111561196357611962611805565b5b602082029050602081019050919050565b600061198761198284611948565b611865565b905080838252602082019050602084028301858111156119aa576119a96118ac565b5b835b818110156119d357806119bf8882611733565b8452602084019350506020810190506119ac565b5050509392505050565b600082601f8301126119f2576119f16117ef565b5b8135611a02848260208601611974565b91505092915050565b600080600060608486031215611a2457611a2361165e565b5b6000611a3286828701611733565b935050602084013567ffffffffffffffff811115611a5357611a52611663565b5b611a5f8682870161191a565b925050604084013567ffffffffffffffff811115611a8057611a7f611663565b5b611a8c868287016119dd565b9150509250925092565b611a9f81611688565b82525050565b6000602082019050611aba6000830184611a96565b92915050565b60008115159050919050565b611ad581611ac0565b82525050565b6000602082019050611af06000830184611acc565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611b3082611620565b9150611b3b83611620565b9250828203905081811115611b5357611b52611af6565b5b92915050565b600082825260208201905092915050565b7f436f6e747261637420616c726561647920696e697469616c697a656400000000600082015250565b6000611ba0601c83611b59565b9150611bab82611b6a565b602082019050919050565b60006020820190508181036000830152611bcf81611b93565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000611c1082611620565b9150611c1b83611620565b9250828201905080821115611c3357611c32611af6565b5b92915050565b6000611c4482611620565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611c7657611c75611af6565b5b600182019050919050565b7f546f74616c7320646f6e74206d61746368000000000000000000000000000000600082015250565b6000611cb7601183611b59565b9150611cc282611c81565b602082019050919050565b60006020820190508181036000830152611ce681611caa565b9050919050565b6000606082019050611d026000830186611a96565b611d0f6020830185611a96565b611d1c604083018461162a565b949350505050565b611d2d81611ac0565b8114611d3857600080fd5b50565b600081519050611d4a81611d24565b92915050565b600060208284031215611d6657611d6561165e565b5b6000611d7484828501611d3b565b91505092915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000611dd9602683611b59565b9150611de482611d7d565b604082019050919050565b60006020820190508181036000830152611e0881611dcc565b9050919050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b6000611e45601f83611b59565b9150611e5082611e0f565b602082019050919050565b60006020820190508181036000830152611e7481611e38565b9050919050565b6000604082019050611e906000830185611a96565b611e9d602083018461162a565b9392505050565b600081905092915050565b50565b6000611ebf600083611ea4565b9150611eca82611eaf565b600082019050919050565b6000611ee082611eb2565b9150819050919050565b7f455448205472616e73666572206661696c65642e000000000000000000000000600082015250565b6000611f20601483611b59565b9150611f2b82611eea565b602082019050919050565b60006020820190508181036000830152611f4f81611f13565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000611f8c602083611b59565b9150611f9782611f56565b602082019050919050565b60006020820190508181036000830152611fbb81611f7f565b9050919050565b6000611fcd82611620565b9150611fd883611620565b9250828202611fe681611620565b91508282048414831517611ffd57611ffc611af6565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061203e82611620565b915061204983611620565b92508261205957612058612004565b5b828204905092915050565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b60006120c0602a83611b59565b91506120cb82612064565b604082019050919050565b600060208201905081810360008301526120ef816120b3565b9050919050565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b6000612152602683611b59565b915061215d826120f6565b604082019050919050565b6000602082019050818103600083015261218181612145565b9050919050565b600081519050919050565b60005b838110156121b1578082015181840152602081019050612196565b60008484015250505050565b60006121c882612188565b6121d28185611ea4565b93506121e2818560208601612193565b80840191505092915050565b60006121fa82846121bd565b915081905092915050565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b600061223b601d83611b59565b915061224682612205565b602082019050919050565b6000602082019050818103600083015261226a8161222e565b9050919050565b600081519050919050565b600061228782612271565b6122918185611b59565b93506122a1818560208601612193565b6122aa816117f4565b840191505092915050565b600060208201905081810360008301526122cf818461227c565b90509291505056fea26469706673582212204a0a8b54bd723fc10f3304e27c244b3dcee19bd95082502b12dee8f77693907d64736f6c63430008110033";

type JayLiquidityStakingConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: JayLiquidityStakingConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class JayLiquidityStaking__factory extends ContractFactory {
  constructor(...args: JayLiquidityStakingConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _liquidityToken: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<JayLiquidityStaking> {
    return super.deploy(
      _liquidityToken,
      overrides || {}
    ) as Promise<JayLiquidityStaking>;
  }
  override getDeployTransaction(
    _liquidityToken: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_liquidityToken, overrides || {});
  }
  override attach(address: string): JayLiquidityStaking {
    return super.attach(address) as JayLiquidityStaking;
  }
  override connect(signer: Signer): JayLiquidityStaking__factory {
    return super.connect(signer) as JayLiquidityStaking__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): JayLiquidityStakingInterface {
    return new utils.Interface(_abi) as JayLiquidityStakingInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): JayLiquidityStaking {
    return new Contract(address, _abi, signerOrProvider) as JayLiquidityStaking;
  }
}
