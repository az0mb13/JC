/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  JayLiquidityStaking,
  JayLiquidityStakingInterface,
} from "../../contracts/JayLiquidityStaking";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_liquidityToken",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "harvestedAmount",
        type: "uint256",
      },
    ],
    name: "Harvest",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdraw",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getBal",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "getReward",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRewardPerTokenStored",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "getStaked",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalStaked",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "init",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_initialLPs",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "_addresses",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "_balances",
        type: "uint256[]",
      },
    ],
    name: "initalize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "liquidityToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "previusRewardTotal",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardPerTokenStored",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "setFeeAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "totalAmountStaked",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "userInfo",
    outputs: [
      {
        internalType: "uint256",
        name: "shares",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "rewardPerTokenOnEntry",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60a06040526000600760006101000a81548160ff0219169083151502179055503480156200002c57600080fd5b5060405162002542380380620025428339818101604052810190620000529190620001ed565b60016000819055506200007a6200006e620000b560201b60201c565b620000bd60201b60201c565b8073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1681525050506200021f565b600033905090565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620001b58262000188565b9050919050565b620001c781620001a8565b8114620001d357600080fd5b50565b600081519050620001e781620001bc565b92915050565b60006020828403121562000206576200020562000183565b5b60006200021684828501620001d6565b91505092915050565b6080516122f2620002506000396000818161050301528181610602015281816107cb0152610a8301526122f26000f3fe60806040526004361061010d5760003560e01c80638d86934211610095578063df136d6511610064578063df136d6514610363578063e1c7392a1461038e578063e34d5d27146103b9578063f2fde38b146103e4578063fe961f611461040d57610114565b80638d869342146102a75780638da5cb5b146102d2578063b6b55f25146102fd578063c00007b01461032657610114565b8063399080ec116100dc578063399080ec146101d657806343cd8f7e1461021357806354cde9f81461023e578063715018a6146102675780638705fcd41461027e57610114565b80630917e776146101195780631959a0021461014457806325caa262146101825780632e1a7d4d146101ad57610114565b3661011457005b600080fd5b34801561012557600080fd5b5061012e610438565b60405161013b9190611606565b60405180910390f35b34801561015057600080fd5b5061016b60048036038101906101669190611693565b610442565b6040516101799291906116c0565b60405180910390f35b34801561018e57600080fd5b50610197610466565b6040516101a49190611606565b60405180910390f35b3480156101b957600080fd5b506101d460048036038101906101cf9190611715565b61046e565b005b3480156101e257600080fd5b506101fd60048036038101906101f89190611693565b6105b4565b60405161020a9190611606565b60405180910390f35b34801561021f57600080fd5b50610228610600565b60405161023591906117a1565b60405180910390f35b34801561024a57600080fd5b50610265600480360381019061026091906119d8565b610624565b005b34801561027357600080fd5b5061027c610870565b005b34801561028a57600080fd5b506102a560048036038101906102a09190611693565b610884565b005b3480156102b357600080fd5b506102bc610909565b6040516102c99190611606565b60405180910390f35b3480156102de57600080fd5b506102e76109a3565b6040516102f49190611a72565b60405180910390f35b34801561030957600080fd5b50610324600480360381019061031f9190611715565b6109cd565b005b34801561033257600080fd5b5061034d60048036038101906103489190611693565b610b35565b60405161035a9190611606565b60405180910390f35b34801561036f57600080fd5b50610378610c84565b6040516103859190611606565b60405180910390f35b34801561039a57600080fd5b506103a3610c8a565b6040516103b09190611aa8565b60405180910390f35b3480156103c557600080fd5b506103ce610c9d565b6040516103db9190611606565b60405180910390f35b3480156103f057600080fd5b5061040b60048036038101906104069190611693565b610ca3565b005b34801561041957600080fd5b50610422610d26565b60405161042f9190611606565b60405180910390f35b6000600454905090565b60066020528060005260406000206000915090508060000154908060010154905082565b600047905090565b610476610d2c565b6000610480610d7b565b905081600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160008282546104d49190611af2565b925050819055506104e3610f61565b81600460008282546104f59190611af2565b9250508190555061054733837f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166110449092919063ffffffff16565b600081111561055a57610559816110ca565b5b3373ffffffffffffffffffffffffffffffffffffffff167f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a9424364836040516105a09190611606565b60405180910390a2506105b161117a565b50565b6000600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001549050919050565b7f000000000000000000000000000000000000000000000000000000000000000081565b61062c611184565b600760009054906101000a900460ff161561067c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067390611b83565b60405180910390fd5b6001600760006101000a81548160ff0219169083151502179055506000805b835181101561077f5760405180604001604052808483815181106106c2576106c1611ba3565b5b602002602001015181526020016000815250600660008684815181106106eb576106ea611ba3565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082015181600001556020820151816001015590505082818151811061075757610756611ba3565b5b60200260200101518261076a9190611bd2565b9150808061077790611c06565b91505061069b565b508381146107c2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107b990611c9a565b60405180910390fd5b806004819055507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166323b872dd3330876040518463ffffffff1660e01b815260040161082693929190611cba565b6020604051808303816000875af1158015610845573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108699190611d1d565b5050505050565b610878611184565b6108826000611202565b565b61088c611184565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036108c557600080fd5b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600080600454111561099b57600454670de0b6b3a7640000600554600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1631476109699190611bd2565b6109739190611af2565b61097d9190611d4a565b6109879190611dd3565b6003546109949190611bd2565b90506109a0565b600090505b90565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6109d5610d2c565b60008060045411156109f0576109e9610d7b565b9050610a01565b600060038190555060006005819055505b81600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000016000828254610a539190611bd2565b92505081905550610a62610f61565b8160046000828254610a749190611bd2565b92505081905550610ac83330847f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166112c8909392919063ffffffff16565b6000811115610adb57610ada816110ca565b5b3373ffffffffffffffffffffffffffffffffffffffff167fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c83604051610b219190611606565b60405180910390a250610b3261117a565b50565b6000806004541115610c7a576000600454670de0b6b3a7640000600554600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163147610b979190611bd2565b610ba19190611af2565b610bab9190611d4a565b610bb59190611dd3565b600354610bc29190611bd2565b9050670de0b6b3a7640000600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001015482610c1b9190611af2565b600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154610c689190611d4a565b610c729190611dd3565b915050610c7f565b600090505b919050565b60035481565b600760009054906101000a900460ff1681565b60055481565b610cab611184565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610d1a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d1190611e76565b60405180910390fd5b610d2381611202565b50565b60045481565b600260005403610d71576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d6890611ee2565b60405180910390fd5b6002600081905550565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f61510896040518163ffffffff1660e01b8152600401600060405180830381600087803b158015610de757600080fd5b505af1158015610dfb573d6000803e3d6000fd5b505050506000479050600454670de0b6b3a764000060055483610e1e9190611af2565b610e289190611d4a565b610e329190611dd3565b600354610e3f9190611bd2565b6003819055506000670de0b6b3a7640000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154600354610ea09190611af2565b600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154610eed9190611d4a565b610ef79190611dd3565b90508082610f059190611af2565b6005819055503373ffffffffffffffffffffffffffffffffffffffff167fc9695243a805adb74c91f28311176c65b417e842d5699893cef56d18bfa48cba82604051610f519190611606565b60405180910390a2809250505090565b6000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000015403610ff8576000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010181905550611042565b600354600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101819055505b565b6110c58363a9059cbb60e01b8484604051602401611063929190611f02565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611351565b505050565b60003373ffffffffffffffffffffffffffffffffffffffff16826040516110f090611f5c565b60006040518083038185875af1925050503d806000811461112d576040519150601f19603f3d011682016040523d82523d6000602084013e611132565b606091505b5050905080611176576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161116d90611fbd565b60405180910390fd5b5050565b6001600081905550565b61118c611418565b73ffffffffffffffffffffffffffffffffffffffff166111aa6109a3565b73ffffffffffffffffffffffffffffffffffffffff1614611200576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111f790612029565b60405180910390fd5b565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b61134b846323b872dd60e01b8585856040516024016112e993929190611cba565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611351565b50505050565b60006113b3826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166114209092919063ffffffff16565b905060008151111561141357808060200190518101906113d39190611d1d565b611412576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611409906120bb565b60405180910390fd5b5b505050565b600033905090565b606061142f8484600085611438565b90509392505050565b60608247101561147d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114749061214d565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff1685876040516114a691906121d3565b60006040518083038185875af1925050503d80600081146114e3576040519150601f19603f3d011682016040523d82523d6000602084013e6114e8565b606091505b50915091506114f987838387611505565b92505050949350505050565b6060831561156757600083510361155f5761151f8561157a565b61155e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161155590612236565b60405180910390fd5b5b829050611572565b611571838361159d565b5b949350505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b6000825111156115b05781518083602001fd5b806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115e4919061229a565b60405180910390fd5b6000819050919050565b611600816115ed565b82525050565b600060208201905061161b60008301846115f7565b92915050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061166082611635565b9050919050565b61167081611655565b811461167b57600080fd5b50565b60008135905061168d81611667565b92915050565b6000602082840312156116a9576116a861162b565b5b60006116b78482850161167e565b91505092915050565b60006040820190506116d560008301856115f7565b6116e260208301846115f7565b9392505050565b6116f2816115ed565b81146116fd57600080fd5b50565b60008135905061170f816116e9565b92915050565b60006020828403121561172b5761172a61162b565b5b600061173984828501611700565b91505092915050565b6000819050919050565b600061176761176261175d84611635565b611742565b611635565b9050919050565b60006117798261174c565b9050919050565b600061178b8261176e565b9050919050565b61179b81611780565b82525050565b60006020820190506117b66000830184611792565b92915050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61180a826117c1565b810181811067ffffffffffffffff82111715611829576118286117d2565b5b80604052505050565b600061183c611621565b90506118488282611801565b919050565b600067ffffffffffffffff821115611868576118676117d2565b5b602082029050602081019050919050565b600080fd5b600061189161188c8461184d565b611832565b905080838252602082019050602084028301858111156118b4576118b3611879565b5b835b818110156118dd57806118c9888261167e565b8452602084019350506020810190506118b6565b5050509392505050565b600082601f8301126118fc576118fb6117bc565b5b813561190c84826020860161187e565b91505092915050565b600067ffffffffffffffff8211156119305761192f6117d2565b5b602082029050602081019050919050565b600061195461194f84611915565b611832565b9050808382526020820190506020840283018581111561197757611976611879565b5b835b818110156119a0578061198c8882611700565b845260208401935050602081019050611979565b5050509392505050565b600082601f8301126119bf576119be6117bc565b5b81356119cf848260208601611941565b91505092915050565b6000806000606084860312156119f1576119f061162b565b5b60006119ff86828701611700565b935050602084013567ffffffffffffffff811115611a2057611a1f611630565b5b611a2c868287016118e7565b925050604084013567ffffffffffffffff811115611a4d57611a4c611630565b5b611a59868287016119aa565b9150509250925092565b611a6c81611655565b82525050565b6000602082019050611a876000830184611a63565b92915050565b60008115159050919050565b611aa281611a8d565b82525050565b6000602082019050611abd6000830184611a99565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611afd826115ed565b9150611b08836115ed565b9250828203905081811115611b2057611b1f611ac3565b5b92915050565b600082825260208201905092915050565b7f436f6e747261637420616c726561647920696e697469616c697a656400000000600082015250565b6000611b6d601c83611b26565b9150611b7882611b37565b602082019050919050565b60006020820190508181036000830152611b9c81611b60565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000611bdd826115ed565b9150611be8836115ed565b9250828201905080821115611c0057611bff611ac3565b5b92915050565b6000611c11826115ed565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611c4357611c42611ac3565b5b600182019050919050565b7f546f74616c7320646f6e74206d61746368000000000000000000000000000000600082015250565b6000611c84601183611b26565b9150611c8f82611c4e565b602082019050919050565b60006020820190508181036000830152611cb381611c77565b9050919050565b6000606082019050611ccf6000830186611a63565b611cdc6020830185611a63565b611ce960408301846115f7565b949350505050565b611cfa81611a8d565b8114611d0557600080fd5b50565b600081519050611d1781611cf1565b92915050565b600060208284031215611d3357611d3261162b565b5b6000611d4184828501611d08565b91505092915050565b6000611d55826115ed565b9150611d60836115ed565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615611d9957611d98611ac3565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000611dde826115ed565b9150611de9836115ed565b925082611df957611df8611da4565b5b828204905092915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000611e60602683611b26565b9150611e6b82611e04565b604082019050919050565b60006020820190508181036000830152611e8f81611e53565b9050919050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b6000611ecc601f83611b26565b9150611ed782611e96565b602082019050919050565b60006020820190508181036000830152611efb81611ebf565b9050919050565b6000604082019050611f176000830185611a63565b611f2460208301846115f7565b9392505050565b600081905092915050565b50565b6000611f46600083611f2b565b9150611f5182611f36565b600082019050919050565b6000611f6782611f39565b9150819050919050565b7f455448205472616e73666572206661696c65642e000000000000000000000000600082015250565b6000611fa7601483611b26565b9150611fb282611f71565b602082019050919050565b60006020820190508181036000830152611fd681611f9a565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000612013602083611b26565b915061201e82611fdd565b602082019050919050565b6000602082019050818103600083015261204281612006565b9050919050565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b60006120a5602a83611b26565b91506120b082612049565b604082019050919050565b600060208201905081810360008301526120d481612098565b9050919050565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b6000612137602683611b26565b9150612142826120db565b604082019050919050565b600060208201905081810360008301526121668161212a565b9050919050565b600081519050919050565b60005b8381101561219657808201518184015260208101905061217b565b60008484015250505050565b60006121ad8261216d565b6121b78185611f2b565b93506121c7818560208601612178565b80840191505092915050565b60006121df82846121a2565b915081905092915050565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b6000612220601d83611b26565b915061222b826121ea565b602082019050919050565b6000602082019050818103600083015261224f81612213565b9050919050565b600081519050919050565b600061226c82612256565b6122768185611b26565b9350612286818560208601612178565b61228f816117c1565b840191505092915050565b600060208201905081810360008301526122b48184612261565b90509291505056fea2646970667358221220f4f54962d31b6dcec319f96593b466e09999c1d431659b23d424d1562b83fa3a64736f6c63430008100033";

type JayLiquidityStakingConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: JayLiquidityStakingConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class JayLiquidityStaking__factory extends ContractFactory {
  constructor(...args: JayLiquidityStakingConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _liquidityToken: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<JayLiquidityStaking> {
    return super.deploy(
      _liquidityToken,
      overrides || {}
    ) as Promise<JayLiquidityStaking>;
  }
  override getDeployTransaction(
    _liquidityToken: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_liquidityToken, overrides || {});
  }
  override attach(address: string): JayLiquidityStaking {
    return super.attach(address) as JayLiquidityStaking;
  }
  override connect(signer: Signer): JayLiquidityStaking__factory {
    return super.connect(signer) as JayLiquidityStaking__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): JayLiquidityStakingInterface {
    return new utils.Interface(_abi) as JayLiquidityStakingInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): JayLiquidityStaking {
    return new Contract(address, _abi, signerOrProvider) as JayLiquidityStaking;
  }
}
