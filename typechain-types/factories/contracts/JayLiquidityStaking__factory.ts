/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  JayLiquidityStaking,
  JayLiquidityStakingInterface,
} from "../../contracts/JayLiquidityStaking";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_liquidityToken",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "harvestedAmount",
        type: "uint256",
      },
    ],
    name: "Harvest",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdraw",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getBal",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "getReward",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRewardPerTokenStored",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "getStaked",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalStaked",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "init",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_initialLPs",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "_addresses",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "_balances",
        type: "uint256[]",
      },
    ],
    name: "initalize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "liquidityToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "previusRewardTotal",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardPerTokenStored",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "setFeeAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "totalAmountStaked",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "userInfo",
    outputs: [
      {
        internalType: "uint256",
        name: "shares",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "rewardPerTokenOnEntry",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60a06040526000600760006101000a81548160ff0219169083151502179055503480156200002c57600080fd5b5060405162002509380380620025098339818101604052810190620000529190620001ed565b60016000819055506200007a6200006e620000b560201b60201c565b620000bd60201b60201c565b8073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1681525050506200021f565b600033905090565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620001b58262000188565b9050919050565b620001c781620001a8565b8114620001d357600080fd5b50565b600081519050620001e781620001bc565b92915050565b60006020828403121562000206576200020562000183565b5b60006200021684828501620001d6565b91505092915050565b6080516122b9620002506000396000818161054501528181610644015281816108130152610a0901526122b96000f3fe60806040526004361061010d5760003560e01c80638d86934211610095578063df136d6511610064578063df136d6514610363578063e1c7392a1461038e578063e34d5d27146103b9578063f2fde38b146103e4578063fe961f611461040d57610114565b80638d869342146102a75780638da5cb5b146102d2578063b6b55f25146102fd578063c00007b01461032657610114565b8063399080ec116100dc578063399080ec146101d657806343cd8f7e1461021357806354cde9f81461023e578063715018a6146102675780638705fcd41461027e57610114565b80630917e776146101195780631959a0021461014457806325caa262146101825780632e1a7d4d146101ad57610114565b3661011457005b600080fd5b34801561012557600080fd5b5061012e610438565b60405161013b91906115e5565b60405180910390f35b34801561015057600080fd5b5061016b60048036038101906101669190611672565b610442565b60405161017992919061169f565b60405180910390f35b34801561018e57600080fd5b50610197610466565b6040516101a491906115e5565b60405180910390f35b3480156101b957600080fd5b506101d460048036038101906101cf91906116f4565b61046e565b005b3480156101e257600080fd5b506101fd60048036038101906101f89190611672565b6105f6565b60405161020a91906115e5565b60405180910390f35b34801561021f57600080fd5b50610228610642565b6040516102359190611780565b60405180910390f35b34801561024a57600080fd5b50610265600480360381019061026091906119b7565b610666565b005b34801561027357600080fd5b5061027c61085e565b005b34801561028a57600080fd5b506102a560048036038101906102a09190611672565b610872565b005b3480156102b357600080fd5b506102bc6108be565b6040516102c991906115e5565b60405180910390f35b3480156102de57600080fd5b506102e7610929565b6040516102f49190611a51565b60405180910390f35b34801561030957600080fd5b50610324600480360381019061031f91906116f4565b610953565b005b34801561033257600080fd5b5061034d60048036038101906103489190611672565b610abb565b60405161035a91906115e5565b60405180910390f35b34801561036f57600080fd5b50610378610bf0565b60405161038591906115e5565b60405180910390f35b34801561039a57600080fd5b506103a3610bf6565b6040516103b09190611a87565b60405180910390f35b3480156103c557600080fd5b506103ce610c09565b6040516103db91906115e5565b60405180910390f35b3480156103f057600080fd5b5061040b60048036038101906104069190611672565b610c0f565b005b34801561041957600080fd5b50610422610c92565b60405161042f91906115e5565b60405180910390f35b6000600454905090565b60066020528060005260406000206000915090508060000154908060010154905082565b600047905090565b610476610c98565b6000610480610ce7565b905081600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160008282546104d49190611ad1565b925050819055506104e3610efe565b81600460008282546104f59190611ad1565b9250508190555061058933600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001547f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16610fe19092919063ffffffff16565b600081111561059c5761059b81611067565b5b3373ffffffffffffffffffffffffffffffffffffffff167f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a9424364836040516105e291906115e5565b60405180910390a2506105f3611117565b50565b6000600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001549050919050565b7f000000000000000000000000000000000000000000000000000000000000000081565b61066e611121565b600760009054906101000a900460ff16156106be576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106b590611b62565b60405180910390fd5b6001600760006101000a81548160ff0219169083151502179055506000805b83518110156107c157604051806040016040528084838151811061070457610703611b82565b5b6020026020010151815260200160008152506006600086848151811061072d5761072c611b82565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082015181600001556020820151816001015590505082818151811061079957610798611b82565b5b6020026020010151826107ac9190611bb1565b915080806107b990611be5565b9150506106dd565b50838114610804576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107fb90611c79565b60405180910390fd5b806004819055506108583330867f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1661119f909392919063ffffffff16565b50505050565b610866611121565b6108706000611228565b565b61087a611121565b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008060045411156109215761090d6004546108ff670de0b6b3a76400006108f1600554476112ee90919063ffffffff16565b61130490919063ffffffff16565b61131a90919063ffffffff16565b60035461091a9190611bb1565b9050610926565b600090505b90565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61095b610c98565b60008060045411156109765761096f610ce7565b9050610987565b600060038190555060006005819055505b81600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160008282546109d99190611bb1565b925050819055506109e8610efe565b81600460008282546109fa9190611bb1565b92505081905550610a4e3330847f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1661119f909392919063ffffffff16565b6000811115610a6157610a6081611067565b5b3373ffffffffffffffffffffffffffffffffffffffff167fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c83604051610aa791906115e5565b60405180910390a250610ab8611117565b50565b6000806004541115610be6576000610b0c600454610afe670de0b6b3a7640000610af0600554476112ee90919063ffffffff16565b61130490919063ffffffff16565b61131a90919063ffffffff16565b600354610b199190611bb1565b9050610bde670de0b6b3a7640000610bd0610b7f600660008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154856112ee90919063ffffffff16565b600660008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000015461130490919063ffffffff16565b61131a90919063ffffffff16565b915050610beb565b600090505b919050565b60035481565b600760009054906101000a900460ff1681565b60055481565b610c17611121565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610c86576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c7d90611d0b565b60405180910390fd5b610c8f81611228565b50565b60045481565b600260005403610cdd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cd490611d77565b60405180910390fd5b6002600081905550565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f61510896040518163ffffffff1660e01b8152600401600060405180830381600087803b158015610d5357600080fd5b505af1158015610d67573d6000803e3d6000fd5b505050506000479050610db3600454610da5670de0b6b3a7640000610d97600554866112ee90919063ffffffff16565b61130490919063ffffffff16565b61131a90919063ffffffff16565b600354610dc09190611bb1565b6003819055506000610e8d670de0b6b3a7640000610e7f610e2e600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101546003546112ee90919063ffffffff16565b600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000015461130490919063ffffffff16565b61131a90919063ffffffff16565b9050610ea281836112ee90919063ffffffff16565b6005819055503373ffffffffffffffffffffffffffffffffffffffff167fc9695243a805adb74c91f28311176c65b417e842d5699893cef56d18bfa48cba82604051610eee91906115e5565b60405180910390a2809250505090565b6000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000015403610f95576000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010181905550610fdf565b600354600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101819055505b565b6110628363a9059cbb60e01b8484604051602401611000929190611d97565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611330565b505050565b60003373ffffffffffffffffffffffffffffffffffffffff168260405161108d90611df1565b60006040518083038185875af1925050503d80600081146110ca576040519150601f19603f3d011682016040523d82523d6000602084013e6110cf565b606091505b5050905080611113576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161110a90611e52565b60405180910390fd5b5050565b6001600081905550565b6111296113f7565b73ffffffffffffffffffffffffffffffffffffffff16611147610929565b73ffffffffffffffffffffffffffffffffffffffff161461119d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161119490611ebe565b60405180910390fd5b565b611222846323b872dd60e01b8585856040516024016111c093929190611ede565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611330565b50505050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600081836112fc9190611ad1565b905092915050565b600081836113129190611f15565b905092915050565b600081836113289190611f86565b905092915050565b6000611392826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166113ff9092919063ffffffff16565b90506000815111156113f257808060200190518101906113b29190611fe3565b6113f1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113e890612082565b60405180910390fd5b5b505050565b600033905090565b606061140e8484600085611417565b90509392505050565b60608247101561145c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161145390612114565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff168587604051611485919061219a565b60006040518083038185875af1925050503d80600081146114c2576040519150601f19603f3d011682016040523d82523d6000602084013e6114c7565b606091505b50915091506114d8878383876114e4565b92505050949350505050565b6060831561154657600083510361153e576114fe85611559565b61153d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611534906121fd565b60405180910390fd5b5b829050611551565b611550838361157c565b5b949350505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b60008251111561158f5781518083602001fd5b806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115c39190612261565b60405180910390fd5b6000819050919050565b6115df816115cc565b82525050565b60006020820190506115fa60008301846115d6565b92915050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061163f82611614565b9050919050565b61164f81611634565b811461165a57600080fd5b50565b60008135905061166c81611646565b92915050565b6000602082840312156116885761168761160a565b5b60006116968482850161165d565b91505092915050565b60006040820190506116b460008301856115d6565b6116c160208301846115d6565b9392505050565b6116d1816115cc565b81146116dc57600080fd5b50565b6000813590506116ee816116c8565b92915050565b60006020828403121561170a5761170961160a565b5b6000611718848285016116df565b91505092915050565b6000819050919050565b600061174661174161173c84611614565b611721565b611614565b9050919050565b60006117588261172b565b9050919050565b600061176a8261174d565b9050919050565b61177a8161175f565b82525050565b60006020820190506117956000830184611771565b92915050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6117e9826117a0565b810181811067ffffffffffffffff82111715611808576118076117b1565b5b80604052505050565b600061181b611600565b905061182782826117e0565b919050565b600067ffffffffffffffff821115611847576118466117b1565b5b602082029050602081019050919050565b600080fd5b600061187061186b8461182c565b611811565b9050808382526020820190506020840283018581111561189357611892611858565b5b835b818110156118bc57806118a8888261165d565b845260208401935050602081019050611895565b5050509392505050565b600082601f8301126118db576118da61179b565b5b81356118eb84826020860161185d565b91505092915050565b600067ffffffffffffffff82111561190f5761190e6117b1565b5b602082029050602081019050919050565b600061193361192e846118f4565b611811565b9050808382526020820190506020840283018581111561195657611955611858565b5b835b8181101561197f578061196b88826116df565b845260208401935050602081019050611958565b5050509392505050565b600082601f83011261199e5761199d61179b565b5b81356119ae848260208601611920565b91505092915050565b6000806000606084860312156119d0576119cf61160a565b5b60006119de868287016116df565b935050602084013567ffffffffffffffff8111156119ff576119fe61160f565b5b611a0b868287016118c6565b925050604084013567ffffffffffffffff811115611a2c57611a2b61160f565b5b611a3886828701611989565b9150509250925092565b611a4b81611634565b82525050565b6000602082019050611a666000830184611a42565b92915050565b60008115159050919050565b611a8181611a6c565b82525050565b6000602082019050611a9c6000830184611a78565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611adc826115cc565b9150611ae7836115cc565b9250828203905081811115611aff57611afe611aa2565b5b92915050565b600082825260208201905092915050565b7f436f6e747261637420616c726561647920696e697469616c697a656400000000600082015250565b6000611b4c601c83611b05565b9150611b5782611b16565b602082019050919050565b60006020820190508181036000830152611b7b81611b3f565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000611bbc826115cc565b9150611bc7836115cc565b9250828201905080821115611bdf57611bde611aa2565b5b92915050565b6000611bf0826115cc565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611c2257611c21611aa2565b5b600182019050919050565b7f546f74616c7320646f6e74206d61746368000000000000000000000000000000600082015250565b6000611c63601183611b05565b9150611c6e82611c2d565b602082019050919050565b60006020820190508181036000830152611c9281611c56565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000611cf5602683611b05565b9150611d0082611c99565b604082019050919050565b60006020820190508181036000830152611d2481611ce8565b9050919050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b6000611d61601f83611b05565b9150611d6c82611d2b565b602082019050919050565b60006020820190508181036000830152611d9081611d54565b9050919050565b6000604082019050611dac6000830185611a42565b611db960208301846115d6565b9392505050565b600081905092915050565b50565b6000611ddb600083611dc0565b9150611de682611dcb565b600082019050919050565b6000611dfc82611dce565b9150819050919050565b7f455448205472616e73666572206661696c65642e000000000000000000000000600082015250565b6000611e3c601483611b05565b9150611e4782611e06565b602082019050919050565b60006020820190508181036000830152611e6b81611e2f565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000611ea8602083611b05565b9150611eb382611e72565b602082019050919050565b60006020820190508181036000830152611ed781611e9b565b9050919050565b6000606082019050611ef36000830186611a42565b611f006020830185611a42565b611f0d60408301846115d6565b949350505050565b6000611f20826115cc565b9150611f2b836115cc565b9250828202611f39816115cc565b91508282048414831517611f5057611f4f611aa2565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000611f91826115cc565b9150611f9c836115cc565b925082611fac57611fab611f57565b5b828204905092915050565b611fc081611a6c565b8114611fcb57600080fd5b50565b600081519050611fdd81611fb7565b92915050565b600060208284031215611ff957611ff861160a565b5b600061200784828501611fce565b91505092915050565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b600061206c602a83611b05565b915061207782612010565b604082019050919050565b6000602082019050818103600083015261209b8161205f565b9050919050565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b60006120fe602683611b05565b9150612109826120a2565b604082019050919050565b6000602082019050818103600083015261212d816120f1565b9050919050565b600081519050919050565b60005b8381101561215d578082015181840152602081019050612142565b60008484015250505050565b600061217482612134565b61217e8185611dc0565b935061218e81856020860161213f565b80840191505092915050565b60006121a68284612169565b915081905092915050565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b60006121e7601d83611b05565b91506121f2826121b1565b602082019050919050565b60006020820190508181036000830152612216816121da565b9050919050565b600081519050919050565b60006122338261221d565b61223d8185611b05565b935061224d81856020860161213f565b612256816117a0565b840191505092915050565b6000602082019050818103600083015261227b8184612228565b90509291505056fea2646970667358221220a6efd31ca9928fb9b0f99b971b251214863071ffab0983ced2837b7bc4b8467f64736f6c63430008110033";

type JayLiquidityStakingConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: JayLiquidityStakingConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class JayLiquidityStaking__factory extends ContractFactory {
  constructor(...args: JayLiquidityStakingConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _liquidityToken: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<JayLiquidityStaking> {
    return super.deploy(
      _liquidityToken,
      overrides || {}
    ) as Promise<JayLiquidityStaking>;
  }
  override getDeployTransaction(
    _liquidityToken: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_liquidityToken, overrides || {});
  }
  override attach(address: string): JayLiquidityStaking {
    return super.attach(address) as JayLiquidityStaking;
  }
  override connect(signer: Signer): JayLiquidityStaking__factory {
    return super.connect(signer) as JayLiquidityStaking__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): JayLiquidityStakingInterface {
    return new utils.Interface(_abi) as JayLiquidityStakingInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): JayLiquidityStaking {
    return new Contract(address, _abi, signerOrProvider) as JayLiquidityStaking;
  }
}
