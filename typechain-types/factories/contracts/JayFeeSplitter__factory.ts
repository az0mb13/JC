/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  JayFeeSplitter,
  JayFeeSplitterInterface,
} from "../../contracts/JayFeeSplitter";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [],
    name: "MIN",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "setLPWallet",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "setNFTWallet",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "setTEAMWallet",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "splitFees",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5061002d61002261003960201b60201c565b61004160201b60201c565b60018081905550610105565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b610a32806101146000396000f3fe60806040526004361061008a5760003560e01c80637425beed116100595780637425beed146101275780638da5cb5b14610150578063d0e30db01461017b578063f2fde38b14610185578063f6151089146101ae57610091565b806329de6d201461009357806337a7f2b7146100bc5780633b0aacbc146100e7578063715018a61461011057610091565b3661009157005b005b34801561009f57600080fd5b506100ba60048036038101906100b591906106e4565b6101c5565b005b3480156100c857600080fd5b506100d1610211565b6040516100de919061072a565b60405180910390f35b3480156100f357600080fd5b5061010e600480360381019061010991906106e4565b61021c565b005b34801561011c57600080fd5b50610125610268565b005b34801561013357600080fd5b5061014e600480360381019061014991906106e4565b61027c565b005b34801561015c57600080fd5b506101656102c8565b6040516101729190610754565b60405180910390f35b6101836102f1565b005b34801561019157600080fd5b506101ac60048036038101906101a791906106e4565b6102f3565b005b3480156101ba57600080fd5b506101c3610376565b005b6101cd61042e565b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b66038d7ea4c6800081565b61022461042e565b80600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b61027061042e565b61027a60006104ac565b565b61028461042e565b80600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b565b6102fb61042e565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361036a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610361906107f2565b60405180910390fd5b610373816104ac565b50565b61037e610570565b600060034761038d9190610841565b905066038d7ea4c68000811115610423576103ca600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16826105bf565b6103f6600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16826105bf565b610422600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16826105bf565b5b5061042c610670565b565b610436610679565b73ffffffffffffffffffffffffffffffffffffffff166104546102c8565b73ffffffffffffffffffffffffffffffffffffffff16146104aa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104a1906108be565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6002600154036105b5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105ac9061092a565b60405180910390fd5b6002600181905550565b60008273ffffffffffffffffffffffffffffffffffffffff16826040516105e59061097b565b60006040518083038185875af1925050503d8060008114610622576040519150601f19603f3d011682016040523d82523d6000602084013e610627565b606091505b505090508061066b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610662906109dc565b60405180910390fd5b505050565b60018081905550565b600033905090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006106b182610686565b9050919050565b6106c1816106a6565b81146106cc57600080fd5b50565b6000813590506106de816106b8565b92915050565b6000602082840312156106fa576106f9610681565b5b6000610708848285016106cf565b91505092915050565b6000819050919050565b61072481610711565b82525050565b600060208201905061073f600083018461071b565b92915050565b61074e816106a6565b82525050565b60006020820190506107696000830184610745565b92915050565b600082825260208201905092915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b60006107dc60268361076f565b91506107e782610780565b604082019050919050565b6000602082019050818103600083015261080b816107cf565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061084c82610711565b915061085783610711565b92508261086757610866610812565b5b828204905092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006108a860208361076f565b91506108b382610872565b602082019050919050565b600060208201905081810360008301526108d78161089b565b9050919050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b6000610914601f8361076f565b915061091f826108de565b602082019050919050565b6000602082019050818103600083015261094381610907565b9050919050565b600081905092915050565b50565b600061096560008361094a565b915061097082610955565b600082019050919050565b600061098682610958565b9150819050919050565b7f455448205472616e73666572206661696c65642e000000000000000000000000600082015250565b60006109c660148361076f565b91506109d182610990565b602082019050919050565b600060208201905081810360008301526109f5816109b9565b905091905056fea264697066735822122083517c8aafb19e95c199e7da5dcdf821be0c2bafbd152111d0ca08ea1103553764736f6c63430008110033";

type JayFeeSplitterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: JayFeeSplitterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class JayFeeSplitter__factory extends ContractFactory {
  constructor(...args: JayFeeSplitterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<JayFeeSplitter> {
    return super.deploy(overrides || {}) as Promise<JayFeeSplitter>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): JayFeeSplitter {
    return super.attach(address) as JayFeeSplitter;
  }
  override connect(signer: Signer): JayFeeSplitter__factory {
    return super.connect(signer) as JayFeeSplitter__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): JayFeeSplitterInterface {
    return new utils.Interface(_abi) as JayFeeSplitterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): JayFeeSplitter {
    return new Contract(address, _abi, signerOrProvider) as JayFeeSplitter;
  }
}
