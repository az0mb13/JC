/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  JayDerivLiquidityStaking,
  JayDerivLiquidityStakingInterface,
} from "../../contracts/JayDerivLiquidityStaking";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_liquidityToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "_rewardToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "_backingToken",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "harvestedAmount",
        type: "uint256",
      },
    ],
    name: "Harvest",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdraw",
    type: "event",
  },
  {
    inputs: [],
    name: "FEE_ADDRESS",
    outputs: [
      {
        internalType: "contract JayDerivFeeSplitter",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "START_DATE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "backingToken",
    outputs: [
      {
        internalType: "contract JayERC20Deriv",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getAPY",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getBal",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "getReward",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRewardPerTokenStored",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "getStaked",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalStaked",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "init",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_initialLPs",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "_addresses",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "_balances",
        type: "uint256[]",
      },
    ],
    name: "initalize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "liquidityToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "previusRewardTotal",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardPerTokenStored",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "setFeeAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "setStart",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "start",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalAmountStaked",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "userInfo",
    outputs: [
      {
        internalType: "uint256",
        name: "shares",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "rewardPerTokenOnEntry",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x6101006040526000600760006101000a81548160ff0219169083151502179055506000600760016101000a81548160ff0219169083151502179055503480156200004857600080fd5b5060405162002ee138038062002ee183398181016040528101906200006e91906200027b565b6001600081905550620000966200008a6200014360201b60201c565b6200014b60201b60201c565b8273ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff16815250508173ffffffffffffffffffffffffffffffffffffffff1660c08173ffffffffffffffffffffffffffffffffffffffff16815250508073ffffffffffffffffffffffffffffffffffffffff1660e08173ffffffffffffffffffffffffffffffffffffffff16815250504260808181525050505050620002d7565b600033905090565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620002438262000216565b9050919050565b620002558162000236565b81146200026157600080fd5b50565b60008151905062000275816200024a565b92915050565b60008060006060848603121562000297576200029662000211565b5b6000620002a78682870162000264565b9350506020620002ba8682870162000264565b9250506040620002cd8682870162000264565b9150509250925092565b60805160a05160c05160e051612b676200037a6000396000818161089701528181611230015261137a0152600081816105e001528181610bbf01528181610c8f01528181610f33015281816110030152818161151c0152818161161b015261198201526000818161072b0152818161087301528181610a6001528181610e4b0152818161119d015261126c015260008181610803015261131a0152612b676000f3fe60806040526004361061016a5760003560e01c80638d869342116100d1578063df136d651161008a578063eb1edd6111610064578063eb1edd6114610504578063f2fde38b1461052f578063f7c618c114610558578063fe961f611461058357610171565b8063df136d6514610483578063e1c7392a146104ae578063e34d5d27146104d957610171565b80638d869342146103715780638da5cb5b1461039c578063b6b55f25146103c7578063be9a6555146103f0578063c00007b01461041b578063d2cbf7ad1461045857610171565b8063399080ec11610123578063399080ec1461027557806343cd8f7e146102b257806347e621b7146102dd57806354cde9f814610308578063715018a6146103315780638705fcd41461034857610171565b80630917e776146101765780631959a002146101a157806325caa262146101df5780632e1a7d4d1461020a57806335975a3714610233578063372c65331461024a57610171565b3661017157005b600080fd5b34801561018257600080fd5b5061018b6105ae565b6040516101989190611e56565b60405180910390f35b3480156101ad57600080fd5b506101c860048036038101906101c39190611ee3565b6105b8565b6040516101d6929190611f10565b60405180910390f35b3480156101eb57600080fd5b506101f46105dc565b6040516102019190611e56565b60405180910390f35b34801561021657600080fd5b50610231600480360381019061022c9190611f65565b61067d565b005b34801561023f57600080fd5b506102486107dc565b005b34801561025657600080fd5b5061025f610801565b60405161026c9190611e56565b60405180910390f35b34801561028157600080fd5b5061029c60048036038101906102979190611ee3565b610825565b6040516102a99190611e56565b60405180910390f35b3480156102be57600080fd5b506102c7610871565b6040516102d49190611ff1565b60405180910390f35b3480156102e957600080fd5b506102f2610895565b6040516102ff919061203f565b60405180910390f35b34801561031457600080fd5b5061032f600480360381019061032a9190612276565b6108b9565b005b34801561033d57600080fd5b50610346610b05565b005b34801561035457600080fd5b5061036f600480360381019061036a9190611ee3565b610b19565b005b34801561037d57600080fd5b50610386610b9e565b6040516103939190611e56565b60405180910390f35b3480156103a857600080fd5b506103b1610d6b565b6040516103be9190612310565b60405180910390f35b3480156103d357600080fd5b506103ee60048036038101906103e99190611f65565b610d95565b005b3480156103fc57600080fd5b50610405610efd565b6040516104129190612346565b60405180910390f35b34801561042757600080fd5b50610442600480360381019061043d9190611ee3565b610f10565b60405161044f9190611e56565b60405180910390f35b34801561046457600080fd5b5061046d611192565b60405161047a9190611e56565b60405180910390f35b34801561048f57600080fd5b50610498611452565b6040516104a59190611e56565b60405180910390f35b3480156104ba57600080fd5b506104c3611458565b6040516104d09190612346565b60405180910390f35b3480156104e557600080fd5b506104ee61146b565b6040516104fb9190611e56565b60405180910390f35b34801561051057600080fd5b50610519611471565b6040516105269190612382565b60405180910390f35b34801561053b57600080fd5b5061055660048036038101906105519190611ee3565b611497565b005b34801561056457600080fd5b5061056d61151a565b60405161057a9190611ff1565b60405180910390f35b34801561058f57600080fd5b5061059861153e565b6040516105a59190611e56565b60405180910390f35b6000600454905090565b60066020528060005260406000206000915090508060000154908060010154905082565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016106379190612310565b602060405180830381865afa158015610654573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061067891906123b2565b905090565b610685611544565b600760019054906101000a900460ff1661069e57600080fd5b60006106a8611593565b905081600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160008282546106fc919061240e565b9250508190555061070b611812565b816004600082825461071d919061240e565b9250508190555061076f33837f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166118f59092919063ffffffff16565b6000811115610782576107818161197b565b5b3373ffffffffffffffffffffffffffffffffffffffff167f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a9424364836040516107c89190611e56565b60405180910390a2506107d96119c9565b50565b6107e46119d3565b6001600760016101000a81548160ff021916908315150217905550565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001549050919050565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b6108c16119d3565b600760009054906101000a900460ff1615610911576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109089061249f565b60405180910390fd5b6001600760006101000a81548160ff0219169083151502179055506000805b8351811015610a14576040518060400160405280848381518110610957576109566124bf565b5b602002602001015181526020016000815250600660008684815181106109805761097f6124bf565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000155602082015181600101559050508281815181106109ec576109eb6124bf565b5b6020026020010151826109ff91906124ee565b91508080610a0c90612522565b915050610930565b50838114610a57576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a4e906125b6565b60405180910390fd5b806004819055507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166323b872dd3330876040518463ffffffff1660e01b8152600401610abb939291906125d6565b6020604051808303816000875af1158015610ada573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610afe9190612639565b5050505050565b610b0d6119d3565b610b176000611a51565b565b610b216119d3565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610b5a57600080fd5b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000806004541115610d6357600454670de0b6b3a7640000600554600360027f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff1660e01b8152600401610c389190612310565b602060405180830381865afa158015610c55573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c7991906123b2565b610c839190612666565b610c8d91906126ef565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610ce69190612310565b602060405180830381865afa158015610d03573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d2791906123b2565b610d3191906124ee565b610d3b919061240e565b610d459190612666565b610d4f91906126ef565b600354610d5c91906124ee565b9050610d68565b600090505b90565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610d9d611544565b6000806004541115610db857610db1611593565b9050610dc9565b600060038190555060006005819055505b81600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000016000828254610e1b91906124ee565b92505081905550610e2a611812565b8160046000828254610e3c91906124ee565b92505081905550610e903330847f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16611b17909392919063ffffffff16565b6000811115610ea357610ea28161197b565b5b3373ffffffffffffffffffffffffffffffffffffffff167fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c83604051610ee99190611e56565b60405180910390a250610efa6119c9565b50565b600760019054906101000a900460ff1681565b6000806004541115611188576000600454670de0b6b3a7640000600554600360027f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff1660e01b8152600401610fac9190612310565b602060405180830381865afa158015610fc9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fed91906123b2565b610ff79190612666565b61100191906126ef565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161105a9190612310565b602060405180830381865afa158015611077573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061109b91906123b2565b6110a591906124ee565b6110af919061240e565b6110b99190612666565b6110c391906126ef565b6003546110d091906124ee565b9050670de0b6b3a7640000600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001015482611129919061240e565b600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001546111769190612666565b61118091906126ef565b91505061118d565b600090505b919050565b6000806001905060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611206573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061122a91906123b2565b905060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a082317f00000000000000000000000000000000000000000000000000000000000000006040518263ffffffff1660e01b81526004016112a79190612310565b602060405180830381865afa1580156112c4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112e891906123b2565b9050600082848360026112fb9190612666565b6113059190612666565b61130f91906126ef565b905060006018603c807f000000000000000000000000000000000000000000000000000000000000000042611344919061240e565b61134e91906126ef565b61135891906126ef565b61136291906126ef565b905060018161137191906124ee565b905060008582847f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663f57557476113bc610b9e565b6040518263ffffffff1660e01b81526004016113d89190611e56565b602060405180830381865afa1580156113f5573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061141991906123b2565b618e946114269190612666565b61143091906126ef565b61143a91906126ef565b61144491906126ef565b905080965050505050505090565b60035481565b600760009054906101000a900460ff1681565b60055481565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61149f6119d3565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361150e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161150590612792565b60405180910390fd5b61151781611a51565b50565b7f000000000000000000000000000000000000000000000000000000000000000081565b60045481565b600260005403611589576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611580906127fe565b60405180910390fd5b6002600081905550565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f61510896040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156115ff57600080fd5b505af1158015611613573d6000803e3d6000fd5b5050505060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016116729190612310565b602060405180830381865afa15801561168f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116b391906123b2565b9050600454670de0b6b3a7640000600554836116cf919061240e565b6116d99190612666565b6116e391906126ef565b6003546116f091906124ee565b6003819055506000670de0b6b3a7640000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154600354611751919061240e565b600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000015461179e9190612666565b6117a891906126ef565b905080826117b6919061240e565b6005819055503373ffffffffffffffffffffffffffffffffffffffff167fc9695243a805adb74c91f28311176c65b417e842d5699893cef56d18bfa48cba826040516118029190611e56565b60405180910390a2809250505090565b6000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154036118a9576000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101819055506118f3565b600354600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101819055505b565b6119768363a9059cbb60e01b848460405160240161191492919061281e565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611ba0565b505050565b6119c633827f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166118f59092919063ffffffff16565b50565b6001600081905550565b6119db611c68565b73ffffffffffffffffffffffffffffffffffffffff166119f9610d6b565b73ffffffffffffffffffffffffffffffffffffffff1614611a4f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a4690612893565b60405180910390fd5b565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b611b9a846323b872dd60e01b858585604051602401611b38939291906125d6565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611ba0565b50505050565b6000611c02826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff16611c709092919063ffffffff16565b9050600081511480611c24575080806020019051810190611c239190612639565b5b611c63576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611c5a90612925565b60405180910390fd5b505050565b600033905090565b6060611c7f8484600085611c88565b90509392505050565b606082471015611ccd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611cc4906129b7565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff168587604051611cf69190612a48565b60006040518083038185875af1925050503d8060008114611d33576040519150601f19603f3d011682016040523d82523d6000602084013e611d38565b606091505b5091509150611d4987838387611d55565b92505050949350505050565b60608315611db7576000835103611daf57611d6f85611dca565b611dae576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611da590612aab565b60405180910390fd5b5b829050611dc2565b611dc18383611ded565b5b949350505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b600082511115611e005781518083602001fd5b806040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611e349190612b0f565b60405180910390fd5b6000819050919050565b611e5081611e3d565b82525050565b6000602082019050611e6b6000830184611e47565b92915050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611eb082611e85565b9050919050565b611ec081611ea5565b8114611ecb57600080fd5b50565b600081359050611edd81611eb7565b92915050565b600060208284031215611ef957611ef8611e7b565b5b6000611f0784828501611ece565b91505092915050565b6000604082019050611f256000830185611e47565b611f326020830184611e47565b9392505050565b611f4281611e3d565b8114611f4d57600080fd5b50565b600081359050611f5f81611f39565b92915050565b600060208284031215611f7b57611f7a611e7b565b5b6000611f8984828501611f50565b91505092915050565b6000819050919050565b6000611fb7611fb2611fad84611e85565b611f92565b611e85565b9050919050565b6000611fc982611f9c565b9050919050565b6000611fdb82611fbe565b9050919050565b611feb81611fd0565b82525050565b60006020820190506120066000830184611fe2565b92915050565b600061201782611f9c565b9050919050565b60006120298261200c565b9050919050565b6120398161201e565b82525050565b60006020820190506120546000830184612030565b92915050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6120a88261205f565b810181811067ffffffffffffffff821117156120c7576120c6612070565b5b80604052505050565b60006120da611e71565b90506120e6828261209f565b919050565b600067ffffffffffffffff82111561210657612105612070565b5b602082029050602081019050919050565b600080fd5b600061212f61212a846120eb565b6120d0565b9050808382526020820190506020840283018581111561215257612151612117565b5b835b8181101561217b57806121678882611ece565b845260208401935050602081019050612154565b5050509392505050565b600082601f83011261219a5761219961205a565b5b81356121aa84826020860161211c565b91505092915050565b600067ffffffffffffffff8211156121ce576121cd612070565b5b602082029050602081019050919050565b60006121f26121ed846121b3565b6120d0565b9050808382526020820190506020840283018581111561221557612214612117565b5b835b8181101561223e578061222a8882611f50565b845260208401935050602081019050612217565b5050509392505050565b600082601f83011261225d5761225c61205a565b5b813561226d8482602086016121df565b91505092915050565b60008060006060848603121561228f5761228e611e7b565b5b600061229d86828701611f50565b935050602084013567ffffffffffffffff8111156122be576122bd611e80565b5b6122ca86828701612185565b925050604084013567ffffffffffffffff8111156122eb576122ea611e80565b5b6122f786828701612248565b9150509250925092565b61230a81611ea5565b82525050565b60006020820190506123256000830184612301565b92915050565b60008115159050919050565b6123408161232b565b82525050565b600060208201905061235b6000830184612337565b92915050565b600061236c82611fbe565b9050919050565b61237c81612361565b82525050565b60006020820190506123976000830184612373565b92915050565b6000815190506123ac81611f39565b92915050565b6000602082840312156123c8576123c7611e7b565b5b60006123d68482850161239d565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061241982611e3d565b915061242483611e3d565b925082820390508181111561243c5761243b6123df565b5b92915050565b600082825260208201905092915050565b7f436f6e747261637420616c726561647920696e697469616c697a656400000000600082015250565b6000612489601c83612442565b915061249482612453565b602082019050919050565b600060208201905081810360008301526124b88161247c565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60006124f982611e3d565b915061250483611e3d565b925082820190508082111561251c5761251b6123df565b5b92915050565b600061252d82611e3d565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361255f5761255e6123df565b5b600182019050919050565b7f546f74616c7320646f6e74206d61746368000000000000000000000000000000600082015250565b60006125a0601183612442565b91506125ab8261256a565b602082019050919050565b600060208201905081810360008301526125cf81612593565b9050919050565b60006060820190506125eb6000830186612301565b6125f86020830185612301565b6126056040830184611e47565b949350505050565b6126168161232b565b811461262157600080fd5b50565b6000815190506126338161260d565b92915050565b60006020828403121561264f5761264e611e7b565b5b600061265d84828501612624565b91505092915050565b600061267182611e3d565b915061267c83611e3d565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156126b5576126b46123df565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006126fa82611e3d565b915061270583611e3d565b925082612715576127146126c0565b5b828204905092915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b600061277c602683612442565b915061278782612720565b604082019050919050565b600060208201905081810360008301526127ab8161276f565b9050919050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b60006127e8601f83612442565b91506127f3826127b2565b602082019050919050565b60006020820190508181036000830152612817816127db565b9050919050565b60006040820190506128336000830185612301565b6128406020830184611e47565b9392505050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b600061287d602083612442565b915061288882612847565b602082019050919050565b600060208201905081810360008301526128ac81612870565b9050919050565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b600061290f602a83612442565b915061291a826128b3565b604082019050919050565b6000602082019050818103600083015261293e81612902565b9050919050565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b60006129a1602683612442565b91506129ac82612945565b604082019050919050565b600060208201905081810360008301526129d081612994565b9050919050565b600081519050919050565b600081905092915050565b60005b83811015612a0b5780820151818401526020810190506129f0565b60008484015250505050565b6000612a22826129d7565b612a2c81856129e2565b9350612a3c8185602086016129ed565b80840191505092915050565b6000612a548284612a17565b915081905092915050565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b6000612a95601d83612442565b9150612aa082612a5f565b602082019050919050565b60006020820190508181036000830152612ac481612a88565b9050919050565b600081519050919050565b6000612ae182612acb565b612aeb8185612442565b9350612afb8185602086016129ed565b612b048161205f565b840191505092915050565b60006020820190508181036000830152612b298184612ad6565b90509291505056fea264697066735822122047a7aa3b066c6b715c623be8f545275cc58b2a0a988f996f05cabaea75a1b93e64736f6c63430008100033";

type JayDerivLiquidityStakingConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: JayDerivLiquidityStakingConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class JayDerivLiquidityStaking__factory extends ContractFactory {
  constructor(...args: JayDerivLiquidityStakingConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _liquidityToken: string,
    _rewardToken: string,
    _backingToken: string,
    overrides?: Overrides & { from?: string }
  ): Promise<JayDerivLiquidityStaking> {
    return super.deploy(
      _liquidityToken,
      _rewardToken,
      _backingToken,
      overrides || {}
    ) as Promise<JayDerivLiquidityStaking>;
  }
  override getDeployTransaction(
    _liquidityToken: string,
    _rewardToken: string,
    _backingToken: string,
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _liquidityToken,
      _rewardToken,
      _backingToken,
      overrides || {}
    );
  }
  override attach(address: string): JayDerivLiquidityStaking {
    return super.attach(address) as JayDerivLiquidityStaking;
  }
  override connect(signer: Signer): JayDerivLiquidityStaking__factory {
    return super.connect(signer) as JayDerivLiquidityStaking__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): JayDerivLiquidityStakingInterface {
    return new utils.Interface(_abi) as JayDerivLiquidityStakingInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): JayDerivLiquidityStaking {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as JayDerivLiquidityStaking;
  }
}
